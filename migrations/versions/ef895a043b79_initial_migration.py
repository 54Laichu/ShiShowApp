"""initial migration

Revision ID: ef895a043b79
Revises: 
Create Date: 2024-08-12 00:27:28.344970

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ef895a043b79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_city_name'), 'city', ['name'], unique=False)
    op.create_table('coach',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('profile_photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coach_account'), 'coach', ['account'], unique=False)
    op.create_table('coursecategory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coursecategory_name'), 'coursecategory', ['name'], unique=False)
    op.create_table('user',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_table('certificate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('certificate_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coachcity',
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('coach_id', 'city_id')
    )
    op.create_table('coachcoursecategory',
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['coursecategory.id'], ),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('coach_id', 'category_id')
    )
    op.create_table('coachphoto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_profile', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gym',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usercity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'city_id')
    )
    op.create_table('usercoach',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'coach_id')
    )
    op.create_table('usercoursecategory',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['coursecategory.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'category_id')
    )
    op.create_table('coachgym',
    sa.Column('coach_id', sa.Integer(), nullable=False),
    sa.Column('gym_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['coach_id'], ['coach.id'], ),
    sa.ForeignKeyConstraint(['gym_id'], ['gym.id'], ),
    sa.PrimaryKeyConstraint('coach_id', 'gym_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('coachgym')
    op.drop_table('usercoursecategory')
    op.drop_table('usercoach')
    op.drop_table('usercity')
    op.drop_table('gym')
    op.drop_table('coachphoto')
    op.drop_table('coachcoursecategory')
    op.drop_table('coachcity')
    op.drop_table('certificate')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_coursecategory_name'), table_name='coursecategory')
    op.drop_table('coursecategory')
    op.drop_index(op.f('ix_coach_account'), table_name='coach')
    op.drop_table('coach')
    op.drop_index(op.f('ix_city_name'), table_name='city')
    op.drop_table('city')
    # ### end Alembic commands ###
